{"version":3,"sources":["./src/app/home/history/history.component.ts","./src/app/home/history/history.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/core/local-storage/local-storage.model.ts","./src/environments/environment.ts","./src/app/core/local-storage/local-storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/home/search/search.component.ts","./src/app/home/search/search.component.html","./src/app/app.module.ts","./src/app/core/github/github.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/core/core.module.ts","./src/app/home/ranking/ranking.component.ts","./src/app/home/ranking/ranking.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Historic } from '@core/local-storage/local-storage.model';\r\nimport { HistoricRep } from '@core/local-storage/local-storage.model';\r\nimport { LocalStorageService } from '@core/local-storage/local-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.component.html',\r\n  styleUrls: ['./history.component.scss'],\r\n})\r\nexport class HistoryComponent implements OnInit {\r\n  historic: Historic[];\r\n  historicRepo: HistoricRep[];\r\n\r\n  constructor(private _localStorageService: LocalStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._localStorageService.historic$.subscribe((history) => {\r\n      this.historic = this.sortingByDate([...history]);\r\n    });\r\n\r\n    this._localStorageService.historicRep$.subscribe((historyReps) => {\r\n      this.historicRepo = this.sortingByDate([...historyReps]);\r\n    })\r\n  }\r\n\r\n  private sortingByDate = (list: Historic[] | HistoricRep[]): any[] => {\r\n    return list.sort(\r\n      (a, b) => new Date(b.datetime).getTime() - new Date(a.datetime).getTime()\r\n    );\r\n  };\r\n}\r\n","<div id=\"container-history\">\r\n\t<h2>Ranking Page</h2>\r\n\t<mat-accordion>\r\n\t\t<mat-expansion-panel>\r\n\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\tLast 5 user searches\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t</mat-expansion-panel-header>\r\n\t\t\t<div class=\"cards\">\r\n\t\t\t\t<mat-card *ngFor=\"let item of historic\">\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\tquery searched: {{ item.username }}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tsearch moment: {{ item.datetime | date: \"dd/MM/yyyy hh:mm:ss\" }}\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</mat-expansion-panel>\r\n\r\n\t\t<mat-expansion-panel>\r\n\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\tLast 5 repos searches\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t</mat-expansion-panel-header>\r\n\t\t\t<div class=\"cards\">\r\n\t\t\t\t<mat-card *ngFor=\"let item of historicRepo\">\r\n\t\t\t\t\t<mat-card-content>\r\n\t\t\t\t\t\tquery searched: {{ item.repository }}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tsearch moment: {{ item.datetime | date: \"dd/MM/yyyy hh:mm:ss\" }}\r\n\t\t\t\t\t</mat-card-content>\r\n\t\t\t\t</mat-card>\r\n\t\t\t</div>\r\n\t\t</mat-expansion-panel>\r\n\t</mat-accordion>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-home',\r\n\ttemplateUrl: './home.component.html',\r\n\tstyleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n\tconstructor() {\r\n\t\twindow.onresize = function () {\r\n\t\t\tlocation.reload();\r\n\t\t};\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n\t<mat-tab label=\"Search\">\r\n\t\t<app-search></app-search>\r\n\t</mat-tab>\r\n\t<mat-tab label=\"Ranking\">\r\n\t\t<app-ranking></app-ranking>\r\n\t</mat-tab>\r\n\t<mat-tab label=\"History\">\r\n\t\t<app-history></app-history>\r\n\t</mat-tab>\r\n\t<!-- <mat-tab label=\"Teste\">\r\n\t\t<app-teste></app-teste>\r\n\t</mat-tab> -->\r\n</mat-tab-group>","export interface Historic {\r\n\tusername: string;\r\n\tdatetime: string;\r\n}\r\n\r\nexport interface HistoricRep {\r\n\trepository: string;\r\n\tdatetime: string;\r\n}\r\n\r\nexport enum HistoricKey {\r\n\tSYSTEM_HISTORIC = 'pit.system.historic',\r\n\tSYSTEM_HISTORIC_REPOS = 'pit.system.historic.repos'\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Historic, HistoricKey, HistoricRep } from './local-storage.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  historic$: Observable<Historic[]>;\n  historicRep$: Observable<HistoricRep[]>\n\n  private _historicEvent: BehaviorSubject<Historic[]>;\n  private _historicRepEvent: BehaviorSubject<HistoricRep[]>;\n\n  constructor(private _http: HttpClient) {\n    this._historicEvent = new BehaviorSubject(this.historic);\n    this._historicRepEvent = new BehaviorSubject(this.historicRep);\n\n    this.historicRep$ = this._historicRepEvent.asObservable();\n    this.historic$ = this._historicEvent.asObservable();\n  }\n\n  add(username: string): void {\n    const value = this._historicEvent.getValue();\n    if (value.length === 5) {\n      value.shift();\n    }\n    value.push({ username, datetime: new Date().toISOString() });\n    localStorage.setItem(HistoricKey.SYSTEM_HISTORIC, JSON.stringify(value));\n    this._historicEvent.next(value);\n  }\n\n  get historic(): Historic[] {\n    const historic = localStorage.getItem(HistoricKey.SYSTEM_HISTORIC);\n    return historic ? JSON.parse(historic) : [];\n  }\n\n  addRep(repository: string): void {\n    const value = this._historicRepEvent.getValue();\n    if (value.length === 5) {\n      value.shift();\n    }\n    value.push({ repository, datetime: new Date().toISOString() });\n    localStorage.setItem(HistoricKey.SYSTEM_HISTORIC_REPOS, JSON.stringify(value));\n    this._historicRepEvent.next(value);\n  }\n\n  get historicRep(): HistoricRep[] {\n    const historicRep = localStorage.getItem(HistoricKey.SYSTEM_HISTORIC_REPOS);\n    return historicRep ? JSON.parse(historicRep) : [];\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\ttitle = 'desafio-pit';\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<mat-grid-list id=\"grid-home\" cols=\"1\">\r\n\t<mat-grid-tile-header>\r\n\t\t<app-home></app-home>\r\n\t</mat-grid-tile-header>\r\n</mat-grid-list>","import { DatePipe, formatDate } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { finalize, takeUntil, map } from 'rxjs/operators';\r\n\r\nimport { GithubService } from '@core/github/github.service';\r\nimport { LocalStorageService } from '@core/local-storage/local-storage.service';\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n  private readonly _unsubscribe: Subject<void>;\r\n\r\n  usernameFormControl = new FormControl('', [Validators.required]);\r\n\r\n  repositoryFormControl = new FormControl('', [Validators.required]);\r\n\r\n  /*ag-grid*/\r\n  columnDefsUser: ColDef[];\r\n  defaultUserColDef;\r\n  rowDataUser;\r\n  gridUserApi;\r\n  gridUserColumnApi;\r\n\r\n  columnDefsRep: ColDef[];\r\n  defaultReposColDef;\r\n  rowDataRep;\r\n  gridRepApi;\r\n  gridRepColumnApi;\r\n\r\n  /*--end ag-grid*/\r\n\r\n  loading: boolean;\r\n  historicLocal = this._localStorageService.historic;\r\n  historicRepLocal = this._localStorageService.historicRep;\r\n\r\n  constructor(\r\n    private _githubService: GithubService,\r\n    private _localStorageService: LocalStorageService,\r\n  ) {\r\n    this.columnDefsUser = [\r\n      { headerName: 'Login', field: 'login', width: 60 },\r\n      { headerName: 'Type', field: 'type', width: 50 },\r\n      { headerName: 'Url', field: 'url' }\r\n    ];\r\n\r\n    this.columnDefsRep = [\r\n      { headerName: 'Name', field: 'name' },\r\n      { headerName: 'Owner', field: 'owner.login' },\r\n      {\r\n        headerName: 'Updated At',\r\n        field: 'updated_at',\r\n        sortable: true,\r\n        sort: 'desc'\r\n      }\r\n    ];\r\n\r\n    this._unsubscribe = new Subject();\r\n\r\n    this.defaultUserColDef = {\r\n      sortable: true,\r\n      resizable: true,\r\n      filter: true,\r\n      flex: 1,\r\n    };\r\n\r\n    this.defaultReposColDef = {\r\n      resizable: true,\r\n      filter: true,\r\n      flex: 1,\r\n      minWidth: 150\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.historicLocal.length > 0) {\r\n      this.usernameFormControl.setValue(this.historicLocal[this.historicLocal.length - 1].username);\r\n      this.callingGitUsers();\r\n    }\r\n\r\n    if (this.historicRepLocal.length > 0) {\r\n      this.repositoryFormControl.setValue(this.historicRepLocal[this.historicRepLocal.length - 1].repository);\r\n      this.callingGitRepos();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._unsubscribe.next();\r\n    this._unsubscribe.complete();\r\n  }\r\n\r\n  onGridUserReady(params) {\r\n    this.gridUserApi = params.api;\r\n    this.gridUserColumnApi = params.columnApi;\r\n    this.gridUserApi.sizeColumnsToFit(400);\r\n    if (this.historicLocal.length > 0) {\r\n      this._githubService\r\n        .getUser(this.usernameFormControl.value)\r\n        .pipe(\r\n          takeUntil(this._unsubscribe),\r\n          finalize(() => (this.loading = false))\r\n        )\r\n        .subscribe((response) => {\r\n          this.rowDataUser = response.items\r\n        });\r\n    }\r\n  }\r\n\r\n  onGridRepReady(params) {\r\n    this.gridRepApi = params.api;\r\n    this.gridRepColumnApi = params.columnApi;\r\n    this.gridRepApi.sizeColumnsToFit(400);\r\n    if (this.historicRepLocal.length > 0) {\r\n      this._githubService\r\n        .getRepos(this.repositoryFormControl.value)\r\n        .pipe(\r\n          takeUntil(this._unsubscribe),\r\n          finalize(() => (this.loading = false))\r\n        )\r\n        .subscribe((response) => {\r\n          this.rowDataRep = response.items\r\n        })\r\n    }\r\n  }\r\n\r\n  searchUsersGit() {\r\n    if (!this.usernameFormControl.invalid) {\r\n      this._localStorageService.add(this.usernameFormControl.value);\r\n      this.callingGitUsers();\r\n    }\r\n  }\r\n\r\n  searchReposGit() {\r\n    if (!this.repositoryFormControl.invalid) {\r\n      this._localStorageService.addRep(this.repositoryFormControl.value)\r\n      this.callingGitRepos();\r\n    }\r\n  }\r\n\r\n  private callingGitRepos(): void {\r\n    this.loading = true;\r\n    this._githubService\r\n      .getRepos(this.repositoryFormControl.value)\r\n      .pipe(\r\n        takeUntil(this._unsubscribe),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe((response) => {\r\n        response.map\r\n        this.rowDataRep = response.items;\r\n      })\r\n  }\r\n\r\n  private callingGitUsers(): void {\r\n    this.loading = true;\r\n    this._githubService\r\n      .getUser(this.usernameFormControl.value)\r\n      .pipe(\r\n        takeUntil(this._unsubscribe),\r\n        finalize(() => (this.loading = false))\r\n      )\r\n      .subscribe((response) => {\r\n        this.rowDataUser = response.items\r\n      });\r\n  }\r\n}","<mat-progress-bar *ngIf=\"loading\" class=\"example-margin\" color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\r\n<div id=\"grid-search\">\r\n\t<h2>Search users and repos by GitHub Api</h2>\r\n\t<!-- search user [(ngModel)]=\"usernameQuery\" -->\r\n\t<div id=\"search-user\">\r\n\t\t<form>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>username</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput [formControl]=\"usernameFormControl\" />\r\n\t\t\t\t<mat-error *ngIf=\"usernameFormControl.hasError('required')\">\r\n\t\t\t\t\tname is <strong>required</strong>\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<button mat-raised-button color=\"accent\" (click)=\"searchUsersGit()\">\r\n\t\t\t\tSearch\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t\t<div id=\"table-user\" class=\"container-grid\">\r\n\t\t\t<ag-grid-angular style=\"width: 100%; height:100%\" class=\"ag-theme-material\" [columnDefs]=\"columnDefsUser\"\r\n\t\t\t\t[defaultColDef]=\"defaultUserColDef\" [pagination]=\"true\" [rowData]=\"rowDataUser\" [paginationPageSize]=\"5\"\r\n\t\t\t\t(gridReady)=\"onGridUserReady($event)\">\r\n\t\t\t</ag-grid-angular>\r\n\t\t</div>\r\n\t</div>\r\n\t<mat-divider></mat-divider>\r\n\t<!-- search repository  [(ngModel)]=\"repositoryQuery\"-->\r\n\t<div id=\"search-rep\">\r\n\t\t<form>\r\n\t\t\t<mat-form-field>\r\n\t\t\t\t<mat-label>repository</mat-label>\r\n\t\t\t\t<input type=\"text\" matInput [formControl]=\"repositoryFormControl\" />\r\n\t\t\t\t<mat-error *ngIf=\"repositoryFormControl.hasError('required')\">\r\n\t\t\t\t\trepositoy is <strong>required</strong>\r\n\t\t\t\t</mat-error>\r\n\t\t\t</mat-form-field>\r\n\t\t\t<button mat-raised-button color=\"accent\" (click)=\"searchReposGit()\">\r\n\t\t\t\tSearch\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t\t<div id=\"table-reps\" class=\"container-grid\">\r\n\t\t\t<ag-grid-angular style=\"width: 100%; height: 100%\" class=\"ag-theme-material\" [columnDefs]=\"columnDefsRep\"\r\n\t\t\t\t[defaultColDef]=\"defaultReposColDef\" [rowData]=\"rowDataRep\" [pagination]=\"true\" [paginationPageSize]=\"5\"\r\n\t\t\t\t(gridReady)=\"onGridRepReady($event)\">\r\n\t\t\t</ag-grid-angular>\r\n\t\t</div>\r\n\t</div>\r\n</div>","\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SearchComponent } from './home/search/search.component';\r\nimport { RankingComponent } from './home/ranking/ranking.component';\r\nimport { HistoryComponent } from './home/history/history.component';\r\nimport { CoreModule } from './core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    SearchComponent,\r\n    RankingComponent,\r\n    HistoryComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressBarModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    AgGridModule.withComponents([]),\r\n\r\n    CoreModule,\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { finalize } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class GithubService {\n\tprivate readonly API_ENDPOINT = 'http://api.github.com';\n\tconstructor(private _http: HttpClient) { }\n\n\tgetUser(username: string): Observable<any> {\n\t\treturn this._http.get(`${this.API_ENDPOINT}/search/users`, {\n\t\t\tparams: new HttpParams().set('q', username),\n\t\t});\n\t}\n\n\tgetRepos(repos: string): Observable<any> {\n\t\treturn this._http.get(`${this.API_ENDPOINT}/search/repositories`, {\n\t\t\tparams: new HttpParams().set('q', repos),\n\t\t});\n\t}\n\n\n\tgetRankingLovedUsers(): Observable<any> {\n\t\treturn this._http.get(`${this.API_ENDPOINT}/search/users`, {\n\t\t\tparams: new HttpParams()\n\t\t\t\t.set('q', 'followers:>=5000')\n\t\t\t\t.set('page', '1')\n\t\t\t\t.set('per_page', '5')\n\t\t\t\t.set('sort', 'followers')\n\t\t\t\t.set('order', 'desc')\n\t\t})\n\t}\n\n\tgetFollowersCount(url): Observable<any> {\n\t\treturn this._http.get(`${url}`)\n\t}\n\n\tgetRankingRep(): Observable<any> {\n\t\treturn this._http.get(`${this.API_ENDPOINT}/search/repositories`, {\n\t\t\tparams: new HttpParams()\n\t\t\t\t.set('q', 'stars:>=10000')\n\t\t\t\t.set('page', '1')\n\t\t\t\t.set('per_page', '5')\n\t\t\t\t.set('sort', 'stars')\n\t\t\t\t.set('order', 'desc')\n\t\t})\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  title: string = 'Procuraê';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar id=\"navbar-procurae\" color=\"primary\" role=\"heading\">\r\n\t<h1>\r\n\t\t{{title}}\r\n\t</h1>\r\n\r\n\t<button mat-mini-fab class=\"btn-repository\" aria-label=\"Repositório\">\r\n\t\t<mat-icon>star_rate</mat-icon>\r\n\t</button>\r\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n})\nexport class CoreModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { GithubService } from '@core/github/github.service';\r\n\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n\tselector: 'app-ranking',\r\n\ttemplateUrl: './ranking.component.html',\r\n\tstyleUrls: ['./ranking.component.scss']\r\n})\r\nexport class RankingComponent implements OnInit, OnDestroy {\r\n\tprivate readonly _unsubscribe: Subject<void>;\r\n\r\n\tcolumnDefsRankingUser: ColDef[];\r\n\tdefaultRankingUserColDef;\r\n\trowDataRankingUser;\r\n\tgridRankingUserApi;\r\n\tgridRankingUserColumnApi;\r\n\r\n\tcolumnDefsRankingReps: ColDef[];\r\n\tdefaultRankingRepsColDef;\r\n\trowDataRankingReps;\r\n\tgridRankingRepsApi;\r\n\tgridRankingRepsColumnApi;\r\n\r\n\tconstructor(private _githubService: GithubService) {\r\n\t\tthis._unsubscribe = new Subject();\r\n\t\t/* ag-grid */\r\n\t\tthis.columnDefsRankingUser = [\r\n\t\t\t{ headerName: 'Login', field: 'login', width: 150 },\r\n\t\t\t{ headerName: 'Followers', field: 'followers_url', width: 350 },\r\n\t\t\t{ headerName: 'Url', field: 'url', width: 300 }\r\n\t\t];\r\n\r\n\t\tthis.columnDefsRankingReps = [\r\n\t\t\t{ headerName: 'Name', field: 'name' },\r\n\t\t\t{ headerName: 'Owner', field: 'owner.login' },\r\n\t\t\t{\r\n\t\t\t\theaderName: 'Stars',\r\n\t\t\t\tfield: 'stargazers_count',\r\n\t\t\t\tsort: 'desc'\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\tthis.defaultRankingUserColDef = {\r\n\t\t\tsortable: true,\r\n\t\t\tresizable: true,\r\n\t\t\tfilter: true,\r\n\t\t\tflex: 1,\r\n\t\t};\r\n\r\n\t\tthis.defaultRankingRepsColDef = {\r\n\t\t\tresizable: true,\r\n\t\t\tfilter: true,\r\n\t\t\tflex: 1,\r\n\t\t\tminWidth: 150\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis._unsubscribe.next();\r\n\t\tthis._unsubscribe.complete();\r\n\t}\r\n\r\n\tonGridRankingUsersReady(params) {\r\n\t\tthis.gridRankingUserApi = params.api;\r\n\t\tthis.gridRankingUserColumnApi = params.columnApi;\r\n\t\tthis.gridRankingUserApi.sizeColumnsToFit(400);\r\n\t\tthis._githubService\r\n\t\t\t.getRankingLovedUsers()\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._unsubscribe)\r\n\t\t\t)\r\n\t\t\t.subscribe((response) => {\r\n\t\t\t\tthis.rowDataRankingUser = response.items\r\n\t\t\t})\r\n\t}\r\n\r\n\tonGridRankingRepReady(params) {\r\n\t\tthis.gridRankingRepsApi = params.api;\r\n\t\tthis.gridRankingRepsColumnApi = params.columnApi;\r\n\t\tthis.gridRankingRepsApi.sizeColumnsToFit(400);\r\n\t\tthis._githubService\r\n\t\t\t.getRankingRep()\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this._unsubscribe)\r\n\t\t\t)\r\n\t\t\t.subscribe((response) => {\r\n\t\t\t\tthis.rowDataRankingReps = response.items\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n}\r\n","<div id=\"container-ranking\">\r\n\t<h2>History Page</h2>\r\n\t<mat-accordion>\r\n\t\t<mat-expansion-panel>\r\n\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\tMost loved users\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t</mat-expansion-panel-header>\r\n\t\t\t<div class=\"container-grid\">\r\n\t\t\t\t<ag-grid-angular style=\"width: 100%; height: 100%;\" class=\"ag-theme-material\" [rowData]=\"rowDataRankingUser\"\r\n\t\t\t\t\t[columnDefs]=\"columnDefsRankingUser\" (gridReady)=\"onGridRankingUsersReady($event)\">\r\n\t\t\t\t</ag-grid-angular>\r\n\t\t\t</div>\r\n\t\t</mat-expansion-panel>\r\n\r\n\t\t<mat-expansion-panel>\r\n\t\t\t<mat-expansion-panel-header>\r\n\t\t\t\t<mat-panel-title>\r\n\t\t\t\t\tTop 5 reps stargazers\r\n\t\t\t\t</mat-panel-title>\r\n\t\t\t</mat-expansion-panel-header>\r\n\t\t\t<div class=\"container-grid\">\r\n\t\t\t\t<ag-grid-angular style=\"width: 100%; height: 100%;\" class=\"ag-theme-material\"\r\n\t\t\t\t\t[columnDefs]=\"columnDefsRankingReps\" [defaultColDef]=\"defaultRankingRepsColDef\" [rowData]=\"rowDataRankingReps\"\r\n\t\t\t\t\t(gridReady)=\"onGridRankingRepReady($event)\">\r\n\t\t\t\t</ag-grid-angular>\r\n\t\t\t</div>\r\n\t\t</mat-expansion-panel>\r\n\t</mat-accordion>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}